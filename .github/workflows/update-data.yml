name: Update HSR Wish Data

on:
  schedule:
    - cron: '0 2,14 * * *'  # UTC 2:00 和 14:00 (北京时间 10:00 和 22:00)
  workflow_dispatch:
  push:
    paths-ignore:
      - 'data.json'

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        
    - name: Delete existing data file
      run: |
        if [ -f data.json ]; then
          git rm -f data.json
          git commit -m "删除旧数据文件" || echo "没有可提交的删除"
        fi
        
    - name: Run data scraper
      run: python starrial.py --save
      
    - name: Force push changes
      uses: actions/github-script@v6
      with:
        script: |
          const { execSync } = require('child_process');
          
          // 配置 Git 用户
          execSync('git config --global user.name "GitHub Actions"');
          execSync('git config --global user.email "actions@users.noreply.github.com"');
          
          // 添加更改
          execSync('git add data.json');
          
          // 检查是否有更改
          const status = execSync('git status --porcelain').toString().trim();
          if (!status) {
            console.log('没有需要提交的更改');
            return;
          }
          
          // 提交更改
          const commitMessage = `Auto update data: ${new Date().toUTCString()}`;
          execSync(`git commit -m "${commitMessage}"`);
          
          // 强制推送更改
          try {
            execSync('git push --force origin HEAD:${{ github.ref }}');
            console.log('强制推送成功');
          } catch (error) {
            console.error('强制推送失败:', error);
            
            // 如果强制推送失败，先拉取最新更改再强制推送
            console.log('尝试拉取最新更改并强制推送...');
            execSync('git fetch origin');
            execSync('git reset --hard origin/${{ github.ref }}');
            execSync('git merge --ff-only origin/${{ github.ref }}');
            execSync('git push --force origin HEAD:${{ github.ref }}');
            console.log('重新推送成功');
          }
